body {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background-color: #3498db;
    background-image: url(/wallpaperBlue.png);
    color: #fff;
    font-family: Helvetica, sans-serif;
}

.logo {
    width: 400px;
    height: auto;
}

.subtitle {
    margin-top: 10px;
    font-size: 28px;
    font-family: 'BOLD';
    text-shadow:
        3px 3px 0 #000,
      -1px -1px 0 #000,  
       1px -1px 0 #000,
       -1px 1px 0 #000,
        1px 1px 0 #000;

}

.button-container {
    display: flex;
    flex-direction: row;
    margin-top: 20px;
    justify-content: space-around;
    
}

.button {
    margin: 0 10px;
    padding: 10px 20px;
    border-radius: 50px;
    background-color: #fff;
    color: #3498db;
    text-align: center;
    text-decoration: none;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    font-family: 'BOLD';
}

select {
    font-family: 'BOLD';
    margin-right: 5px;
    font-size: 24px;
}



@font-face {
    font-family: 'BOLD';
    src: url('/fonts/Gotham-Bold.otf') format('truetype');
}

@font-face {
    font-family: 'LIGHT';
    src: url('/fonts/Gotham-Light.otf') format('truetype');
}

.hidden {
  display: none;
}

.loading-image {
  width: 1080px;
  margin-bottom: 100px;
}

.loading-gif {
    width: 100px;
  }


/* Define a keyframe animation */
@keyframes levitate {
    0% {
        transform: translateY(0); /* Initial position */
    }
    50% {
        transform: translateY(-10px); /* Midpoint of the animation */
    }
    100% {
        transform: translateY(0); /* Return to the initial position */
    }
}

/* Apply the animation to the image */
.logo {
    animation: levitate 2s ease-in-out infinite; /* Adjust the duration, timing function, and iteration count as needed */
}

.country-flag {
    width: 300px;
    margin: 10px;
}

.decade-image{
    width: 300px;
    margin: 10px;
}

.image-container {
    text-align: center;
    position: absolute;
}

/* Show loading screen when it has the 'visible' class */
.loading-screen.visible {
    display: block;
    /* Add styles for the loading screen, such as background color, opacity, etc. */
}


#loadingScreen {
    position: absolute;
    opacity: 1;
    transition: opacity 0.3s ease;
}

.cont{
    margin-top: 30px;
    height: 20px;
    width: 100%;
    background: rgba(0, 200, 0, .3);
    border-radius: 50px;
}   
.cont .loader{
    height: 20px;
    position: relative;
    box-sizing: border-box;
    width: 0%;
    background: rgba(0, 200, 0, .8);
    border-radius: 50px;
    transition: width 1.5s linear
}
.cont .loader:before{
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    border-radius: 50px;
    width: 100%;
    background: linear-gradient(to  right, rgba(0, 200, 0, .3), rgba(0, 100, 0, .8));
    animation: purge 4s infinite ease-out
}

@keyframes purge{
    0%{
        opacity: 0;
        width: 0%;

    }
    50%{
        opacity: .5
    }
    100%{
        opacity: 0;
        width: 100%;
    }
}
.cont .loader label{
    font-size: 12px;
    position: absolute;
    right: -10px;
    text-align: center;
    top: -25px;
    font-weight: 600;
    transition: .3s;
}
.cont .loader:after{
    content: "";
    position: absolute;
    top: -10px;
    right: 0px;
    height: 50%;
    width: 2px;
    background: rgba(0, 200, 0, .8);
}
.cont:hover .loader label{
    transform: scale(1.5);
    transition: .3s;
}